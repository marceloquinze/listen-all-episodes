{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;ACNqC;AACiB;AACmB;AAC8B;AACtE;AAEjCC,oEAAiB,CAChBD,wCAAQ,EACR;EACCU,IAAI;EACJC;AACD,CACD,CAAC;AAED,SAASD,IAAIA,CAACE,KAAK,EAAC;EACnB;EACA,MAAMC,UAAU,GAAGV,sEAAa,CAAC,CAAC;EAElC,MAAM,CAACW,SAAS,EAAEC,UAAU,CAAC,GAAGN,+CAAQ,CAAE,IAAK,CAAC;;EAEhD;EACA;EACA,SAASO,OAAOA,CAACC,KAAK,EAAC;IACtBL,KAAK,CAACM,aAAa,CAAC;MAAEC,IAAI,EAAEF;IAAM,CAAC,CAAC;EACrC;EAEA,OACCG,oDAAA;IAAA,GAAOP;EAAU,GAChBO,oDAAA,CAAClB,sEAAiB,QACjBkB,oDAAA,CAAChB,4DAAS;IAACiB,KAAK,EAAC;EAAc,GAC9BD,oDAAA,CAACf,2DAAQ,QACRe,oDAAA,CAACd,8DAAW;IACXgB,KAAK,EAAC,UAAU;IAChBL,KAAK,EAAGL,KAAK,CAACW,UAAU,CAACJ,IAAM;IAC/BK,QAAQ,EAAGR;EAAS,CACpB,CACQ,CAAC,EACXI,oDAAA,CAACf,2DAAQ,QACRe,oDAAA,CAACb,gEAAa;IACbe,KAAK,EAAC,oBAAoB;IAC1BG,IAAI,EAAGb,KAAK,CAACW,UAAU,CAACG,MAAM,GAAG,kBAAkB,GAAG,mBAAoB;IAC1EC,OAAO,EAAGf,KAAK,CAACW,UAAU,CAACG,MAAQ;IACnCF,QAAQ,EAAGI,CAAC,IAAIhB,KAAK,CAACM,aAAa,CAAC;MAAEQ,MAAM,EAAEE;IAAE,CAAC;EAAG,CACpD,CACQ,CACA,CACO,CAAC,EACpBR,oDAAA;IAAGS,MAAM,EAAGjB,KAAK,CAACW,UAAU,CAACG,MAAM,KAAK,IAAI,GAAG,QAAQ,GAAG,OAAS;IAACI,IAAI,EAAElB,KAAK,CAACW,UAAU,CAACJ,IAAK;IAACY,GAAG,EAAC;EAAU,GAAC,2BAA4B,CAC1I,CAAC;AAEN;AAEA,SAASpB,IAAIA,CAACC,KAAK,EAAC;EACnB,OACCQ,oDAAA,YACCA,oDAAA;IAAGS,MAAM,EAAGjB,KAAK,CAACW,UAAU,CAACG,MAAM,KAAK,IAAI,GAAG,QAAQ,GAAG,OAAS;IAACI,IAAI,EAAElB,KAAK,CAACW,UAAU,CAACJ,IAAK;IAACY,GAAG,EAAC;EAAU,GAAC,2BAA4B,CAC1I,CAAC;AAEN,C","sources":["webpack://listen-all-episodes/external window \"React\"","webpack://listen-all-episodes/external window [\"wp\",\"blockEditor\"]","webpack://listen-all-episodes/external window [\"wp\",\"blocks\"]","webpack://listen-all-episodes/external window [\"wp\",\"components\"]","webpack://listen-all-episodes/webpack/bootstrap","webpack://listen-all-episodes/webpack/runtime/compat get default export","webpack://listen-all-episodes/webpack/runtime/define property getters","webpack://listen-all-episodes/webpack/runtime/hasOwnProperty shorthand","webpack://listen-all-episodes/webpack/runtime/make namespace object","webpack://listen-all-episodes/./src/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import metadata from '../block.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport {InspectorControls, useBlockProps} from '@wordpress/block-editor';\nimport {PanelBody, PanelRow, TextControl, ToggleControl, CheckboxControl} from '@wordpress/components';\nimport { useState } from 'react';\n\nregisterBlockType(\n\tmetadata,\n\t{\n\t\tedit,\n\t\tsave\n\t}\n);\n\nfunction edit(props){\n\t//blockProps faz o elemento se integrar ao editor (ficar constrito à caixa e selecionável)\n\tconst blockProps = useBlockProps();\n\n\tconst [isChecked, setChecked] = useState( true );\n\n\t// Posso fazer assim, ou com arrow function\n\t// ver abaixo exemplo com arrow function\n\tfunction setLink(value){\n\t\tprops.setAttributes({ link: value })\n\t}\n\n\treturn (\n\t\t<p {...blockProps}>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title='Link Options'>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel=\"Show URL\"\n\t\t\t\t\t\t\tvalue={ props.attributes.link }\n\t\t\t\t\t\t\tonChange={ setLink }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Open in a new tab?\"\n\t\t\t\t\t\t\thelp={ props.attributes.newTab ? 'Opens in new tab' : 'Opens in same tab'}\n\t\t\t\t\t\t\tchecked={ props.attributes.newTab }\n\t\t\t\t\t\t\tonChange={ x => props.setAttributes({ newTab: x }) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<a target={ props.attributes.newTab === true ? '_blank' : '_self' } href={props.attributes.link} rel=\"noopener\">Escute todos os programas</a>\n\t\t</p>\n\t)\n}\n\nfunction save(props){\n\treturn (\n\t\t<p>\n\t\t\t<a target={ props.attributes.newTab === true ? '_blank' : '_self' } href={props.attributes.link} rel=\"noopener\">Escute todos os programas</a>\n\t\t</p>\n\t)\n}"],"names":["metadata","registerBlockType","InspectorControls","useBlockProps","PanelBody","PanelRow","TextControl","ToggleControl","CheckboxControl","useState","edit","save","props","blockProps","isChecked","setChecked","setLink","value","setAttributes","link","createElement","title","label","attributes","onChange","help","newTab","checked","x","target","href","rel"],"sourceRoot":""}